{
  "name": "RigRadar Dev",
  "image": "firstdraft/appdev-rails-8-template",

  // Rails will read these for dev/test via config/database.yml
  "containerEnv": {
    "DB_HOST": "127.0.0.1",
    "DB_PORT": "5432",
    "DB_USER": "postgres",
    "DB_PASSWORD": "postgres"
  },

  // Only expose the web-ish ports; hide Postgres from the Ports panel
  "forwardPorts": [3000, 4567, 9292],
  "portsAttributes": {
    "3000": { "onAutoForward": "silent" },
    "4567": { "onAutoForward": "silent" },
    "9292": { "onAutoForward": "silent" }
  },
  "otherPortsAttributes": { "onAutoForward": "ignore" },

  // Install Postgres if the base image didnâ€™t include it
  "postCreateCommand": "/bin/sh -lc 'set -eux; if ! command -v psql >/dev/null 2>&1; then sudo apt-get update && sudo apt-get install -y postgresql postgresql-contrib; fi; gem install rufo htmlbeautifier || true'",

  // Always start the DB when the Codespace boots, then prepare the Rails DB (idempotent)
  "postStartCommand": "/bin/sh -lc 'set -eux; (sudo service postgresql start || sudo pg_ctlcluster 16 main start || true); pg_isready -h 127.0.0.1 -p 5432 || true; unset DATABASE_URL || true; bin/rails db:prepare || true'",

  "customizations": {
    "vscode": {
      "extensions": [
        "vortizhe.simple-ruby-erb",
        "mbessey.vscode-rufo",
        "aliariff.vscode-erb-beautify",
        "eamodio.gitlens",
        "setobiralo.erb-commenter",
        "firstdraft.terminal-clear"
      ]
    }
  }
}
